{% sw_extends '@Storefront/storefront/page/account/index.html.twig' %}

{% block page_account_main_content %}
    <div class="tcg-decks-page">
        <div class="account-welcome">
            <h1>{{ "tcg.decks.title"|trans }}</h1>
            <p class="lead">{{ "tcg.decks.description"|trans }}</p>
        </div>

        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h3 class="card-title mb-0">{{ "tcg.decks.my_decks"|trans }}</h3>
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createDeckModal">
                            <i class="fas fa-plus"></i> {{ "tcg.decks.create_new"|trans }}
                        </button>
                    </div>
                    <div class="card-body">
                        {% if decks|length > 0 %}
                            <div class="decks-grid">
                                {% for deck in decks %}
                                    <div class="deck-card" data-deck-id="{{ deck.id }}">
                                        <div class="deck-header">
                                            <h4 class="deck-name">
                                                <a href="{{ path('frontend.account.tcg.deck.detail', {'deckId': deck.id}) }}">
                                                    {{ deck.name }}
                                                </a>
                                                {% if deck.isPublic %}
                                                    <span class="badge badge-success">{{ "tcg.decks.public"|trans }}</span>
                                                {% endif %}
                                                {% if deck.isComplete %}
                                                    <span class="badge badge-primary">{{ "tcg.decks.complete"|trans }}</span>
                                                {% endif %}
                                            </h4>
                                        </div>
                                        <div class="deck-body">
                                            {% if deck.description %}
                                                <p class="deck-description">{{ deck.description }}</p>
                                            {% endif %}
                                            <div class="deck-stats">
                                                {% if deck.format %}
                                                    <span class="stat">
                                                        <i class="fas fa-tag"></i>
                                                        {{ deck.format }}
                                                    </span>
                                                {% endif %}
                                                {% if deck.archetype %}
                                                    <span class="stat">
                                                        <i class="fas fa-chess"></i>
                                                        {{ deck.archetype }}
                                                    </span>
                                                {% endif %}
                                                <span class="stat">
                                                    <i class="fas fa-layer-group"></i>
                                                    {{ deck.totalCards ?? 0 }} {{ "tcg.decks.total_cards"|trans }}
                                                </span>
                                                <span class="stat">
                                                    <i class="fas fa-calendar"></i>
                                                    {{ deck.createdAt|date('d.m.Y') }}
                                                </span>
                                            </div>
                                        </div>
                                        <div class="deck-actions">
                                            <a href="{{ path('frontend.account.tcg.deck.detail', {'deckId': deck.id}) }}"
                                               class="btn btn-outline-primary btn-sm">
                                                {{ "tcg.decks.view"|trans }}
                                            </a>
                                            <button type="button" class="btn btn-outline-secondary btn-sm"
                                                    onclick="compareDeck('{{ deck.id }}')">
                                                {{ "tcg.decks.compare_with_collection"|trans }}
                                            </button>
                                        </div>
                                    </div>
                                {% endfor %}
                            </div>
                        {% else %}
                            <div class="empty-state text-center py-5">
                                <i class="fas fa-cards-blank fa-3x text-muted mb-3"></i>
                                <h4>{{ "tcg.decks.no_decks"|trans }}</h4>
                                <p class="text-muted">{{ "tcg.decks.no_decks_description"|trans }}</p>
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createDeckModal">
                                    {{ "tcg.decks.create_first"|trans }}
                                </button>
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title mb-0">{{ "tcg.collections.quick_actions"|trans }}</h3>
                    </div>
                    <div class="card-body">
                        <div class="list-group list-group-flush">
                            <a href="{{ path('frontend.account.tcg.collections') }}" class="list-group-item list-group-item-action">
                                <i class="fas fa-layer-group"></i> {{ "tcg.collections.my_collections"|trans }}
                            </a>
                            <a href="{{ path('frontend.account.tcg.deck.feed') }}" class="list-group-item list-group-item-action">
                                <i class="fas fa-rss"></i> {{ "tcg.decks.deck_feed"|trans }}
                            </a>
                            <a href="#" class="list-group-item list-group-item-action" onclick="showCardSearch()">
                                <i class="fas fa-search"></i> {{ "tcg.cards.search"|trans }}
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Create Deck Modal -->
    <div class="modal fade" id="createDeckModal" tabindex="-1" aria-labelledby="createDeckModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createDeckModalLabel">{{ "tcg.decks.create_new"|trans }}</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="createDeckForm">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="deckName" class="form-label">{{ "tcg.decks.name"|trans }} *</label>
                            <input type="text" class="form-control" id="deckName" name="name" required>
                        </div>
                        <div class="mb-3">
                            <label for="deckDescription" class="form-label">{{ "tcg.decks.description"|trans }}</label>
                            <textarea class="form-control" id="deckDescription" name="description" rows="3"></textarea>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="deckFormat" class="form-label">{{ "tcg.decks.format"|trans }}</label>
                                    <select class="form-control" id="deckFormat" name="format">
                                        <option value="">Format wählen...</option>
                                        <option value="Standard">Standard</option>
                                        <option value="Modern">Modern</option>
                                        <option value="Legacy">Legacy</option>
                                        <option value="Vintage">Vintage</option>
                                        <option value="Commander">Commander</option>
                                        <option value="Pioneer">Pioneer</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="deckArchetype" class="form-label">{{ "tcg.decks.archetype"|trans }}</label>
                                    <select class="form-control" id="deckArchetype" name="archetype">
                                        <option value="">Archetyp wählen...</option>
                                        <option value="Aggro">Aggro</option>
                                        <option value="Control">Control</option>
                                        <option value="Combo">Combo</option>
                                        <option value="Midrange">Midrange</option>
                                        <option value="Tempo">Tempo</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="deckColors" class="form-label">{{ "tcg.decks.colors"|trans }}</label>
                            <input type="text" class="form-control" id="deckColors" name="colors" placeholder="z.B. WU, RG, WUBRG">
                        </div>
                        <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" id="deckIsPublic" name="isPublic">
                            <label class="form-check-label" for="deckIsPublic">
                                {{ "tcg.decks.make_public"|trans }}
                            </label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ "tcg.common.cancel"|trans }}</button>
                        <button type="submit" class="btn btn-primary">{{ "tcg.decks.create"|trans }}</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
{% endblock %}

{% block base_body_script %}
    {{ parent() }}

    <script>
        // Get CSRF token from multiple possible sources
        function getCSRFToken() {
            // Try different meta tag names
            let token = document.querySelector('meta[name="_csrf_token"]')?.getAttribute('content');
            if (!token) token = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content');
            if (!token) token = document.querySelector('meta[name="_token"]')?.getAttribute('content');

            // Try to get from form if available
            if (!token) {
                const tokenInput = document.querySelector('input[name="_token"]');
                if (tokenInput) token = tokenInput.value;
            }

            return token || '';
        }

        document.addEventListener('DOMContentLoaded', function() {
            console.log('Decks page loaded'); // Debug
            const csrfToken = getCSRFToken();
            console.log('CSRF Token:', csrfToken); // Debug

            // Create deck form handler
            const createForm = document.getElementById('createDeckForm');
            console.log('Create deck form found:', createForm); // Debug

            if (createForm) {
                createForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    console.log('Deck form submitted'); // Debug

                    const formData = new FormData(createForm);

                    console.log('Sending deck form data'); // Debug

                    fetch('/account/tcg/decks/create', {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: formData
                    })
                    .then(response => {
                        console.log('Deck response received:', response); // Debug
                        if (!response.ok) {
                            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                        }
                        return response.text().then(text => {
                            try {
                                return JSON.parse(text);
                            } catch (e) {
                                console.error('Response text:', text);
                                throw new Error('Invalid JSON response');
                            }
                        });
                    })
                    .then(result => {
                        console.log('Deck result:', result); // Debug
                        if (result.success) {
                            alert('Deck erfolgreich erstellt!');
                            location.reload();
                        } else {
                            // Handle Shopware error format
                            let errorMessage = 'Fehler beim Erstellen des Decks';
                            if (result.errors && result.errors.length > 0) {
                                errorMessage = result.errors.map(error => error.detail || error.title || error).join(', ');
                            } else if (result.message) {
                                errorMessage = result.message;
                            }
                            console.error('Deck creation error:', result);
                            alert(errorMessage);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Ein Fehler ist aufgetreten: ' + error.message);
                    });
                });
            }
        });

        function compareDeck(deckId) {
            fetch(`/api/tcg/decks/${deckId}/compare`)
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    const comparison = result.data.comparison;
                    const pricing = result.data.pricing;

                    let message = `Deck-Vergleich:\n\n`;
                    message += `Vorhandene Karten: ${comparison.ownedCards.length}\n`;
                    message += `Fehlende Karten: ${comparison.missingCards.length}\n`;

                    if (comparison.missingCards.length > 0) {
                        message += `\nGesamtpreis fehlender Karten: ${pricing.totalPrice.toFixed(2)}€\n`;
                        message += `Verfügbare Artikel: ${pricing.availableItems}\n`;
                        message += `Nicht verfügbare Artikel: ${pricing.unavailableItems}`;
                    }

                    alert(message);
                } else {
                    alert(result.message || 'Fehler beim Vergleichen des Decks');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Ein Fehler ist aufgetreten');
            });
        }

        function showCardSearch() {
            // TODO: Implement card search modal
            console.log('Show card search');
        }
    </script>


{% endblock %}
